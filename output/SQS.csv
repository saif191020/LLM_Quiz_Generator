"question","option_a","option_b","option_c","option_d","answer","explanation"
"What is the maximum number of messages that can be retrieved from an SQS queue with a single ReceiveMessage API call?","1","10","100","1000","B","10 — The ReceiveMessage API call allows you to retrieve up to 10 messages at a time."
"What is the maximum retention period for messages in an SQS queue?","7 days","30 days","14 days","Indefinitely, as long as the queue exists","C","14 days — SQS allows you to retain messages in a queue for a maximum of 14 days."
"What is the default visibility timeout for an SQS message in seconds?","10 seconds","60 seconds","300 seconds","30 seconds","D","30 seconds — The default visibility timeout for an SQS message is 30 seconds."
"What is the maximum size of a single message in SQS in KB?","128 KB","256 KB","512 KB","1024 KB","B","256 KB — The maximum size for a single message in SQS is 256 KB."
"How many attributes can you add to a single SQS message?","5","10","25","Unlimited","B","10 — You can add up to 10 custom attributes to a single SQS message."
"What is the maximum delay that can be applied to an SQS message in seconds?","10 seconds","600 seconds (10 minutes)","900 seconds (15 minutes)","1800 seconds (30 minutes)","C","900 seconds (15 minutes) — The maximum delay that can be applied to an SQS message is 900 seconds, which is 15 minutes."
"How many times can a message be received and processed before it is moved to a dead-letter queue by default?","5","10","15","20","B","10 — By default, a message can be received and processed up to 10 times before it is moved to a dead-letter queue."
"What is the maximum number of queues that can be created per AWS account by default?","100","1,000","10,000","Unlimited","B","1,000 — By default, you can create up to 1,000 queues per AWS account."
"What is the maximum length of time a long polling ReceiveMessage request can wait for a message in seconds?","10 seconds","30 seconds","60 seconds","20 seconds","D","20 seconds, The maximum length of time a long polling ReceiveMessage request can wait for a message is 20 seconds."
"What is the maximum number of messages that can be sent in a single SendMessageBatch API call?","1 - You can send up to 1 message in a single SendMessageBatch API call.","5 - You can send up to 5 messages in a single SendMessageBatch API call.","10 - You can send up to 10 messages in a single SendMessageBatch API call.","25 - You can send up to 25 messages in a single SendMessageBatch API call.","C","10 — You can send up to 10 messages in a single SendMessageBatch API call."
"What is the maximum number of messages that can be deleted in a single DeleteMessageBatch API call?","1 - You can delete only one message at a time.","5 - The maximum is five messages per API call.","100 - The limit is 100 messages per API call.","10 - You can delete up to 10 messages in a single DeleteMessageBatch API call.","D","10 — You can delete up to 10 messages in a single DeleteMessageBatch API call."
"What is the maximum number of message attributes that can be set per queue?","10","100","50","Unlimited","C","50 — You can set up to 50 message attributes per queue."
"What is the minimum visibility timeout for an SQS message in seconds?","1 second","30 seconds","60 seconds","0 seconds","D","0 seconds — The minimum visibility timeout for an SQS message is 0 seconds."
"What is the maximum visibility timeout for an SQS message in seconds?","1,200 seconds (20 minutes)","3,600 seconds (1 hour)","43,200 seconds (12 hours)","86,400 seconds (24 hours)","C","43,200 seconds (12 hours) — The maximum visibility timeout for an SQS message is 43,200 seconds, which is 12 hours."
"What is the default delay for an SQS message in seconds if no delay is specified?","10 seconds","30 seconds","60 seconds","0 seconds","D","0 seconds — The default delay for an SQS message if no delay is specified is 0 seconds."
"What is the maximum number of messages that can be returned by the ListDeadLetterSourceQueues API call?","500","1000","2000","There is no limit.","B","1000 — The ListDeadLetterSourceQueues API call can return up to 1000 messages."
"How many times will SQS attempt to deliver a message to a consumer if no other consumer acknowledges it and the visibility timeout is not changed?","A maximum of 10 times","Until the message expires, which is typically 14 days","Indefinitely, unless the message is manually deleted","Indefinitely (until the message retention period expires)","D","Indefinitely (until the message retention period expires) — SQS will continue to attempt to deliver the message until it is acknowledged or the message retention period expires."
"What is the maximum number of messages that can be received in a single ReceiveMessage API call in a FIFO queue?","1 - FIFO queues can only receive one message at a time.","10 - The maximum number of messages that can be received in a single ReceiveMessage API call in a FIFO queue is 10.","100 -  FIFO queues allow for batch processing with a maximum of 100 messages per call.","Unlimited - The number of messages received in a single ReceiveMessage API call is only limited by the queue's capacity.","B","10 — The maximum number of messages that can be received in a single ReceiveMessage API call in a FIFO queue is 10, the same as a standard queue."
"What is the minimum message size that incurs a charge in SQS (in KB)?","2 KB","10 KB","1 KB","0.5 KB","C","1 KB — The minimum message size that incurs a charge in SQS is 1 KB, even if the actual message is smaller."
"What is the maximum number of distinct message groups that can be used in a FIFO queue?","100","1000","There is no explicit limit — There is no explicit limit on the number of distinct message groups in a FIFO queue; it depends on practical limits of usage and performance considerations.","10,000","C","There is no explicit limit — There is no explicit limit on the number of distinct message groups in a FIFO queue; it depends on practical limits of usage and performance considerations."
"You have an application that uses Amazon SQS to decouple different components. How can you ensure that messages are processed at least once?","By setting the `ReceiveMessageWaitTimeSeconds` parameter to a high value, ensuring that the message is available for processing for a longer duration.","By using the `MessageDeduplicationId` parameter to ensure that each message has a unique identifier.","By using the `VisibilityTimeout` parameter to ensure that messages are not visible for processing again until a specific time.","By using the default SQS configuration where messages are delivered at least once. Implement idempotency in the processing logic to handle duplicate messages.","D","By using the default SQS configuration where messages are delivered at least once. Implement idempotency in the processing logic to handle duplicate messages."
"How would you handle a situation where the processing of a message fails? What happens to the message in the SQS queue?","The message is permanently deleted from the queue.","The message is moved to a separate dead-letter queue.","The message remains in the queue and is retried until it is successfully processed or reaches the maximum retention period.","The message is marked as failed and will never be processed again.","C","If processing fails and the message is not deleted, it becomes visible again after the visibility timeout. The message will be retried until it is successfully processed or reaches the maximum retention period."
"What is the difference between standard and FIFO queues in SQS?","Standard queues offer high availability, best-effort ordering, and at-least-once delivery. FIFO queues ensure exactly-once processing, in-order message delivery, and high throughput.","Standard queues offer maximum throughput, in-order message delivery, and at-least-once delivery. FIFO queues ensure exactly-once processing, best-effort ordering, and limited throughput.","Standard queues offer high availability, best-effort ordering, and at-least-once delivery. FIFO queues ensure exactly-once processing, in-order message delivery, and limited throughput.","Standard queues offer maximum throughput, best-effort ordering, and at-least-once delivery. FIFO queues ensure exactly-once processing, in-order message delivery, and limited throughput.","D","Standard queues offer maximum throughput, best-effort ordering, and at-least-once delivery. FIFO queues ensure exactly-once processing, in-order message delivery, and limited throughput."
"What is visibility timeout in SQS, and how does it impact message processing?","The visibility timeout is the maximum amount of time a message can be visible in a queue before it is automatically deleted.","The visibility timeout determines the rate at which messages are processed within a queue.","The visibility timeout is the duration a message stays in a queue before it is considered expired and automatically deleted.","The visibility timeout is the time a message is hidden from other consumers after being retrieved, ensuring it is processed before becoming visible again.","D","Visibility timeout is the period during which a message is invisible to other consumers after being retrieved by one consumer. If not processed within this time, it becomes visible again and can be reprocessed."
"How can you optimize the cost and efficiency of polling messages from an SQS queue?","By using a higher message visibility timeout, which allows messages to remain in the queue for longer periods before being processed.","By implementing a dead-letter queue to handle failed messages, which helps reduce the number of retries.","By using long polling, which reduces the number of empty responses and lowers the cost associated with frequent short polls.","By increasing the batch size for receiving messages, which allows for faster processing of multiple messages in a single request.","C","By using long polling, which reduces the number of empty responses and lowers the cost associated with frequent short polls."
"Describe a scenario where you need to change the visibility timeout of a specific message dynamically.","When a message is being processed by a consumer and the consumer encounters a temporary error, you can increase the visibility timeout to give it more time to retry.","When a message is received by a consumer and it's determined that the message is not relevant to the current processing, you can increase the visibility timeout to defer processing.","When a message is being processed by a consumer and it needs to be transferred to a different queue, you can increase the visibility timeout to prevent the message from being processed by other consumers in the original queue.","When a message is being processed by a consumer and the processing is expected to be particularly long, you can increase the visibility timeout to prevent the message from becoming visible and being processed by another consumer.","D","When processing a message that takes longer than expected, you can extend the visibility timeout to prevent the message from becoming visible and being processed by another consumer."
"How can you ensure that a message is processed only once in a distributed system using SQS?","By using a unique message ID and ensuring that the consumer application processes messages in a sequential order.","By utilizing message groups and setting the `deduplication_scope` to `messageGroup`.","By using FIFO queues and implementing idempotent processing logic in the consumer application.","By using a unique message ID, message groups, and idempotent processing logic in the consumer application.","C","By using FIFO queues and incorporating message deduplication with a unique message ID or implementing idempotent processing logic in the consumer application."
"What is a Dead Letter Queue (DLQ) in SQS, and when would you use it?","A DLQ is a queue that stores messages that have been processed successfully.","A DLQ is a feature that automatically retries failed messages indefinitely.","A DLQ is a queue used to store messages that have failed to be processed after a predefined number of attempts, aiding in troubleshooting.","A DLQ is a queue used to store messages that are older than a certain age.","C","A DLQ is used to handle messages that cannot be processed successfully after multiple attempts. It helps in isolating and debugging problematic messages."
"How do you configure a DLQ for an existing SQS queue?","A. By using the AWS CLI to create a new SQS queue and specifying the main queue as the DLQ.","B. By specifying a DLQ in the main queue’s settings and defining the maximum receive count, after which messages are automatically moved to the DLQ.","C. By using the AWS Management Console to associate a pre-existing SQS queue as the DLQ for the main queue.","D. By using AWS Lambda to automatically move messages from the main queue to the DLQ based on predefined criteria.","B","By specifying a DLQ in the main queue’s settings and defining the maximum receive count, after which messages are automatically moved to the DLQ."
"How do you control access to an SQS queue?","By configuring the queue's visibility timeout to limit access to specific users.","By creating a VPC endpoint for the queue and limiting access to only resources within that VPC.","By using IAM policies and SQS queue policies to grant or deny permissions for specific actions (e.g., SendMessage, ReceiveMessage) to users or roles.","By setting up a KMS key to encrypt the queue's messages, restricting access to only those with the decryption key.","C","By using IAM policies and SQS queue policies to grant or deny permissions for specific actions (e.g., SendMessage, ReceiveMessage) to users or roles."
"What measures can you take to secure messages in transit and at rest in SQS?","Use HTTPS for secure transmission, enable server-side encryption (SSE) with AWS KMS, and use IAM policies to restrict access to the queue.","Use HTTPS for secure transmission, enable client-side encryption using your own encryption keys, and set up an SQS event source mapping to Lambda for processing messages.","Use HTTPS for secure transmission and enable server-side encryption (SSE) with AWS KMS to encrypt messages at rest.","Use HTTPS for secure transmission and configure message retention settings to automatically delete messages after a certain period.","C","Use HTTPS for secure transmission and enable server-side encryption (SSE) with AWS KMS to encrypt messages at rest."
"How can you integrate SQS with AWS Lambda to process messages automatically?","By configuring a scheduled event in CloudWatch to trigger the Lambda function every time a message is received in the SQS queue.","By using the AWS SDK for SQS to send messages to the Lambda function through its API gateway endpoint.","By creating an event source mapping between the SQS queue and the Lambda function, enabling the function to be triggered when new messages are available.","By using an AWS Step Function to orchestrate the process, sending messages from SQS to the Lambda function as part of a workflow.","C","By creating an event source mapping between the SQS queue and the Lambda function, enabling the function to be triggered when new messages are available."
"Describe a use case where you would use SQS in conjunction with Amazon SNS.","Use SNS to send notifications to SQS queues, allowing for asynchronous message delivery and processing.","Use SNS to trigger Lambda functions that process messages from SQS queues, enabling serverless event-driven architectures.","Use SNS to create a fan-out mechanism, sending messages to multiple SQS queues based on message attributes.","Use SNS to send messages to a single SQS queue, allowing for message deduplication and guaranteed delivery.","C","Use SNS to broadcast messages to multiple SQS queues to distribute workloads or deliver notifications to multiple systems simultaneously."
"How can you monitor the health and performance of your SQS queues?","By using the Amazon SQS console to view the queue's status and statistics.","By setting up alarms in Amazon CloudWatch to alert you when certain metrics exceed thresholds.","By using the AWS CLI to retrieve queue attributes and metrics.","By using Amazon CloudWatch metrics such as ApproximateNumberOfMessagesVisible, ApproximateAgeOfOldestMessage, and NumberOfMessagesDeleted.","D","By using Amazon CloudWatch metrics such as ApproximateNumberOfMessagesVisible, ApproximateAgeOfOldestMessage, and NumberOfMessagesDeleted."
"How do you troubleshoot issues with message delivery in SQS?","Check CloudWatch metrics, review DLQ for problematic messages, verify IAM policies, and use CloudTrail logs to track API calls.","Use the AWS CLI to manually send and receive messages to test the queue.","Utilize the SQS console to monitor message visibility timeout and retry attempts.","Enable SQS Dead Letter Queue (DLQ) to capture messages that fail to be processed.","A","Check CloudWatch metrics, review DLQ for problematic messages, verify IAM policies, and use CloudTrail logs to track API calls."
"What is the purpose of message attributes in SQS, and how would you use them?","Message attributes allow you to assign tags to messages for better organization within the queue.","Message attributes can be used to control the delivery order of messages, ensuring messages with specific attributes are delivered first.","Message attributes provide a mechanism for passing custom metadata about the message, enabling more complex processing logic.","Message attributes can be used to filter messages based on their content, allowing you to only process messages that meet certain criteria.","C","Message attributes provide additional metadata about the message. Use them to pass custom data without affecting the message body, enabling more complex processing logic."
"Explain the role of batching in SQS and how it improves performance.","Batching allows for the grouping of multiple messages for processing, resulting in fewer network hops and reduced latency.","Batching enables SQS to prioritize messages based on their urgency, ensuring high-priority messages are processed first.","Batching automatically distributes messages across multiple queues, improving scalability and fault tolerance.","Batching allows sending, receiving, and deleting multiple messages in a single request, reducing the number of API calls and improving throughput and efficiency.","D","Batching allows sending, receiving, and deleting multiple messages in a single request, reducing the number of API calls and improving throughput and efficiency."
"How would you handle message ordering in a distributed system with SQS?","Use a distributed database to ensure message order.","Use a third-party message broker to handle message ordering.","Utilize SQS dead-letter queues to retry messages that are out of order.","Use FIFO queues to preserve message order. If using standard queues, implement application-level logic to handle ordering.","D","Use FIFO queues to preserve message order. If using standard queues, implement application-level logic to handle ordering."
"How do you ensure your SQS queue scales to handle a large influx of messages?","Use standard queues for unlimited throughput, enable long polling to reduce costs, and design your consumers to scale horizontally based on the number of messages.","Use FIFO queues for guaranteed message ordering, enable long polling to reduce costs, and design your consumers to scale horizontally based on the number of messages.","Use standard queues for unlimited throughput, disable long polling to increase throughput, and design your consumers to scale horizontally based on the number of messages.","Use FIFO queues for guaranteed message ordering, disable long polling to increase throughput, and design your consumers to scale horizontally based on the number of messages.","A","Use standard queues for unlimited throughput, enable long polling to reduce costs, and design your consumers to scale horizontally based on the number of messages."
"What are the best practices for designing a resilient system using SQS?","Use SQS for high-throughput, low-latency message delivery, ensuring reliable message delivery.","Implement DLQs for message failure handling, use visibility timeout adjustments for long-running tasks, enable monitoring and alerting, and design idempotent message processing.","Ensure the use of SQS for storing large files and objects for long-term retention.","Utilize SQS as a primary database for storing critical data, ensuring high availability and scalability.","B","Implement DLQs for message failure handling, use visibility timeout adjustments for long-running tasks, enable monitoring and alerting, and design idempotent message processing."
